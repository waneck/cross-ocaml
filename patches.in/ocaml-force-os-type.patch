Displayed os_type when calling ocamlc -config is wrong.
This patch forces the correct value without changing anything
in the Sys module.

Index: mingw-ocaml/build/ocaml/utils/config.mlp
===================================================================
--- mingw-ocaml.orig/build/ocaml/utils/config.mlp	2013-10-13 08:55:10.000000000 -0300
+++ mingw-ocaml/build/ocaml/utils/config.mlp	2013-10-13 08:55:19.000000000 -0300
@@ -85,11 +85,7 @@
 let ext_lib = "%%EXT_LIB%%"
 let ext_dll = "%%EXT_DLL%%"
 
-let default_executable_name =
-  match Sys.os_type with
-    "Unix" -> "a.out"
-  | "Win32" | "Cygwin" -> "camlprog.exe"
-  | _ -> "camlprog"
+let default_executable_name = "camlprog.exe"
 
 let systhread_supported = %%SYSTHREAD_SUPPORT%%;;
 
@@ -118,7 +114,7 @@
   p "ext_asm" ext_asm;
   p "ext_lib" ext_lib;
   p "ext_dll" ext_dll;
-  p "os_type" Sys.os_type;
+  p "os_type" "Win32";
   p "default_executable_name" default_executable_name;
   p_bool "systhread_supported" systhread_supported;
 
Index: mingw-ocaml/build/ocaml/byterun/win32.c
===================================================================
--- mingw-ocaml.orig/build/ocaml/byterun/win32.c	2013-10-13 08:55:10.000000000 -0300
+++ mingw-ocaml/build/ocaml/byterun/win32.c	2013-10-13 16:35:15.333686888 -0300
@@ -35,6 +35,26 @@
 
 #include <flexdll.h>
 
+/* XXX including <io.h> gets ../byterun/io.h for some reason.
+ * Including the real io.h using the full path fails because of
+ * some strange bug in the system header file itself.  Give up and
+ * just define _finddata_t explicitly here.
+ */
+#ifndef _FSIZE_T_DEFINED
+typedef unsigned long   _fsize_t;
+#define _FSIZE_T_DEFINED
+
+struct _finddata_t
+{
+  unsigned        attrib;
+  time_t          time_create;
+  time_t          time_access;
+  time_t          time_write;
+  _fsize_t        size;
+  char            name[FILENAME_MAX];
+};
+#endif
+
 #ifndef S_ISREG
 #define S_ISREG(mode) (((mode) & S_IFMT) == S_IFREG)
 #endif
